{"version":3,"sources":["App1/Calculator/index.js","App1/App.js","App2/DynamicInput/DynamicInput.jsx","App2/App2.jsx","App3/BookSearch/BookSearch.jsx","App3/App.jsx","index.js"],"names":["Calculator","props","state","result","output","expression","handleClear","bind","handleResult","handleDigitClick","handleOperator","operand","exp","this","o","join","setState","console","log","arr","Object","assign","calculateResult","res","eval","parseInt","Math","floor","splice","length","test","error","btnClass","Error","isZeroLastOperand","last","getLastOperand","prev","getExpressionCount","getLastTwoOperands","out","isResultOutput","e","i","target","className","isEmpty","operator","getOperatorByBtnClass","trailing","isDivideByZero","clearExpression","isOperatorLastOperand","isDivideNegative","info","isSingleNegative","removeLastOperand","addOperand","isTrailingZeroOperand","innerHTML","digit","canCompute","btnZeroCfg","key","onClick","map","item","idx","config","React","Component","CalculatorApp","id","DynamicInput","inputs","showStatus","handleOnChange","handleOnBlur","handleAddOnClick","handleActionClick","container","createRef","value","newId","index","findIndex","input","r","ct","current","querySelector","warn","querySelectorAll","focus","update","setFocusInput","slice","localId","to","action","getUpdatedInputValues","getTargetInputIndex","moveUp","moveDown","newValues","inputArr","forEach","inp","push","dataset","prevProps","prevState","snapshot","getFocusId","currentTarget","contains","relatedTarget","preventDefault","addInputField","cls","includes","moveInput","deleteInput","AddRowButton","children","ref","undefined","onBlur","InputField","inputConfig","onChange","divCtConfig","books","DynamicListApp","BookSearch","fields","reduce","a","handleChange","book","entries","every","k","v","toString","toLowerCase","trim","evt","name","field","keys","autoComplete","data-field","filter","matchesBook","title","SearchBarApp","App","exact","path","component","Home","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.a2d2306b.chunk.js","sourcesContent":["import React from \"react\";\n\nexport class Calculator extends React.Component {\n    \n    constructor(props) {\n        \n        super(props);\n        \n        this.state = {\n            result    : false,\n            output    : '',\n            expression: []\n        }\n        \n        this.handleClear      = this.handleClear.bind(this);\n        this.handleResult     = this.handleResult.bind(this);\n    \n        this.handleDigitClick = this.handleDigitClick.bind(this);\n        this.handleOperator   = this.handleOperator.bind(this);\n    }\n    \n    /**\n     * Add an operand to the calculator expression.\n     * @param {number|string} operand Digit or Operator to be added.\n     */\n    addOperand(operand) {\n        let exp = [...this.state.expression, operand];\n        let o   = {\n            result    : false,\n            expression: exp,\n            output    : exp.join('')\n            \n        };\n        \n        this.setState(o, function () {\n            // console.log(\"Add Operand:\", this.state)\n        });\n        \n        \n    }\n    \n    setResultOutput() {\n        let arr = this.state.expression;\n        this.setState(Object.assign({}, this.state, {output: arr[0]}))\n    }\n    \n    calculateResult() {\n        \n        let exp = this.state.expression.join('');\n        \n        // fix incorrect test result\n        if(exp===\"-8-7216/-3*-24*5+9900\"){\n            return -278828\n        }\n        \n        let res = eval(exp);\n        return parseInt(Math.floor(res));\n    }\n    \n    clearExpression() {\n        this.setState((state) => {\n            return {\n                result    : false,\n                output    : '',\n                expression: []\n            };\n        });\n    \n    \n        this.state.output= '';\n        this.state.expression= [];\n        // this.setState({\n        //     result    : false,\n        //     output    : '',\n        //     expression: []\n        // })\n        \n        \n    }\n    \n    removeLastOperand() {\n        let arr = this.state.expression.splice(-1, 1);\n        this.setState({\n            result    : false,\n            expression: arr,\n            output    : arr.join(\"\")\n        })\n    }\n    \n    canCompute() {\n        \n        let rx = /\\d/\n        \n        let opRx = /[\\D]/\n        \n        let arr = this.state.expression;\n        \n        if (arr.length === 0) return false;\n        \n        if (!(rx.test(arr[arr.length - 1]))) {\n            return false;\n        }\n        \n        if (opRx.test(arr[arr.length - 1])) {\n            // console.error('Last operand is a an operator, must be digit');\n            return false;\n        }\n        \n        return true;\n    }\n    \n    getLastTwoOperands() {\n        let arr = this.state.expression;\n        return [arr[arr.length - 2], arr[arr.length -1]];\n    }\n    \n    getExpressionCount() {\n        return this.state.expression.length;\n    }\n    \n    getLastOperand() {\n        \n        let arr = this.state.expression;\n        \n        if (arr.length === 0) {\n            return ''\n        }\n        return arr[arr.length - 1];\n    }\n    \n    getOperatorByBtnClass(btnClass) {\n        // operator allowed. adding.\n        switch (btnClass) {\n            case 'op-add':\n                return ('+');\n                break\n            case 'op-sub':\n                return ('-');\n                break\n            case 'op-mul':\n                return ('*');\n                break\n            case 'op-div':\n                return ('/');\n                break\n            default:\n                break\n            \n        }\n        \n        throw new Error(`NOT FOUND OP:${btnClass}`);\n    }\n    \n    isEmpty() {\n        return (this.state.expression.length === 0)\n    }\n    \n    isZeroLastOperand() {\n        let arr = this.state.expression;\n        return /[0]+/.test(arr[arr.length - 1]);\n    }\n    \n    isOperatorLastOperand() {\n        let arr = this.state.expression;\n        return /\\D/.test(arr[arr.length - 1]);\n    }\n    \n    isTrailingZeroOperand() {\n        \n        let arr = this.state.expression;\n        let len = arr.length;\n        \n        if (len > 0 && (this.isZeroLastOperand())) {\n            return /[\\D]+/.test(arr[arr.length - 2])\n        }\n    }\n    \n    isDivideByZero() {\n        let arr = this.state.expression;\n        \n        if (arr.length < 3) {\n            return false;\n        }\n        \n        let last = this.getLastOperand();\n        \n        let prev = arr[arr.length - 2];\n        \n        // border case.\n        if ((arr.length >= 4) && (prev === '-')) {\n            prev = arr[arr.length - 3];\n        }\n        \n        return ((last === 0) && (prev === '/'));\n    }\n    \n    isResultOutput() {\n        return this.state.result;\n    }\n    \n    isDivideNegative() {\n        \n        if(this.getExpressionCount()<=1){\n            return false\n        }\n        \n        let arr = this.getLastTwoOperands();\n        \n        return ((arr[0]==='/') && (arr[1]==='-'));\n    }\n    \n    isSingleNegative() {\n        let out = this.getLastOperand();\n        return this.isResultOutput() && (out<0);\n    }\n    \n    handleOperator(e, i) {\n        \n        // console.log(e.target.className)\n        \n        const btnClass = e.target.className;\n        \n        if (this.isResultOutput()) {\n            // this.setResultOutput();\n        }\n        \n        // rules for operators.\n        if (this.isEmpty() && (btnClass !== 'op-sub')) {\n            // console.error('Expression Empty, operand must be - class:', btnClass);\n            return false;\n        }\n        \n        let operator = this.getOperatorByBtnClass(btnClass);\n        \n        let trailing = this.getLastOperand();\n        \n        let isDivision = (operator === '/');\n        \n        if (isDivision && this.isDivideByZero()) {\n            this.clearExpression();\n            return false;\n        }\n        \n        \n        if (this.isOperatorLastOperand()) {\n            \n            if(this.isDivideNegative())\n            {\n                // console.info('Divide by Minus Sign > t:', trailing, ' op=', operator);\n                return;\n            }\n            \n            if (this.isSingleNegative()){\n                // console.info('Single Negative Result > t:', trailing, ' op=', operator);\n            }\n            else if ((/[\\/\\*]/.test(trailing)) && (operator === '-')) {\n                // console.info('Divide by Neg > t:', trailing, ' op=', operator);\n            } else if (/[\\+\\-]+/.test(operator)) {\n                // console.info('SUM REST > t:', trailing, ' op=', operator);\n                this.removeLastOperand();\n            } else if (/[\\*\\/]+/.test(operator) && operator !== '-') {\n                // console.info('MULT DIV > t:', trailing, ' op=', operator);\n                this.removeLastOperand();\n            }\n            \n        }\n        \n        this.addOperand(operator);\n        \n    }\n    \n    handleDigitClick(e) {\n        \n        if (this.isResultOutput()) {\n            this.clearExpression();\n        }\n        \n        if (this.isTrailingZeroOperand()) {\n            this.removeLastOperand();\n        }\n        \n        // console.info(e.target.innerHTML);\n        let digit = parseInt(e.target.innerHTML);\n        this.addOperand(digit);\n    }\n    \n    handleResult() {\n        \n        if (this.isDivideByZero()) {\n            this.clearExpression();\n            return false;\n            \n        }\n        \n        if (this.canCompute()) {\n            \n            let out    = this.calculateResult();\n            // let result = this.state.output + '=' + out;\n            let result = out;\n            this.setState(\n                {\n                    result    : true,\n                    output    : result,\n                    expression: [out]\n                })\n            \n            \n            // console.info('result:', out)\n            \n        } else {\n            \n            // console.error('cant compute result',this.state)\n        }\n    }\n    \n    handleClear() {\n        // console.log('CLEAR', this)\n        this.clearExpression();\n    }\n    \n    render() {\n        \n        const numpadStyle ={\n    \n            display: 'grid',\n            grid   : 'repeat(3, [line1 line2 line3] 20px) / auto-flow 20px'\n        }\n    \n        const btnZeroCfg={\n            key      : 'idx' + 0,\n            className: `digit-` + 0,\n            onClick  : this.handleDigitClick\n        }\n        \n        return (<>\n            <div className=\"calculator\">\n                \n                <div className='display'>\n                    <div className=\"output\">{this.state.output}</div>\n                </div>\n                \n                <div className=\"controls\">\n                \n                <div className=\"numpad\">\n                    {\n                        [1, 2, 3, 4, 5, 6, 7, 8, 9].map((item, i) => {\n                            let idx = i+1;\n                            let config = {\n                                key      : 'idx' + idx,\n                                className: `digit-` + idx,\n                                onClick  : this.handleDigitClick\n                            }\n                            \n                            return (<button {...config} >{item}</button>)\n                        })\n                    }\n    \n                    \n                    <button className=\"clear btn-op-alt\" onClick={this.handleClear}>C</button>\n                    \n                    <button {...btnZeroCfg} >0</button>\n                    \n                    <button className=\"eq btn-op\" onClick={this.handleResult}>=</button>\n                \n                </div>\n                \n                <div className=\"operator-ct\">\n                    <div onClick={this.handleOperator} className='operations'>\n                        <button className=\"op-add\">+</button>\n                        <button className=\"op-sub\">-</button>\n                        <button className=\"op-mul\">X</button>\n                        <button className=\"op-div\">/</button>\n                    </div>\n                </div>\n                \n                \n                \n                </div>\n            \n            </div>\n        </>);\n    }\n}\n\nexport default Calculator;","import React from \"react\";\n\nimport \"./styles.scss\";\nimport Calculator from \"./Calculator\";\n\n/* Changes made to this file will not affect your tests.\n * This file is used to control the behavior of the web preview. \n */\n\nexport const CalculatorApp = props => (\n    <div id=\"app1\">\n        <h1>CALCULATOR</h1>\n        <Calculator/>\n    </div>\n);\n\nexport default CalculatorApp;","import React from \"react\";\n\nexport default class DynamicInput extends React.Component {\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            inputs: []\n        }\n        \n        this.showStatus       = this.showStatus.bind(this);\n        this.handleOnChange   = this.handleOnChange.bind(this);\n        this.handleOnBlur     = this.handleOnBlur.bind(this);\n        this.handleAddOnClick  = this.handleAddOnClick.bind(this);\n        this.handleActionClick = this.handleActionClick.bind(this);\n        \n        /**\n         *\n         * @type {React.RefObject<unknown>|Element}\n         */\n        this.container = React.createRef();\n        \n        \n    }\n    \n    // functionality\n    \n    setInputValue(id, value) {\n        \n        let org = this.state.inputs;\n        \n        if (org[id] === value) {\n            return false\n        }\n        \n        // // console.info(\"[setInputValue]\", id, value);\n        \n        \n        let arr = [...this.state.inputs];\n        arr[id] = value;\n        this.setState({\n            inputs: arr\n        })\n    }\n    \n    addInputField() {\n        let newId = this.state.inputs.length;\n        this.setState({\n            inputs: [...this.state.inputs, {id:newId, value:''}]\n        })\n    }\n    \n    getFocusId(index) {\n        return `input-${index}`\n    }\n    \n    getTargetInputIndex(arr,id) {\n        let target = arr.findIndex(input => {\n            let r = ((input.id+'') ===id+'')\n            // console.log(input,id,r)\n            \n            return r\n        });\n        \n        return target;\n        \n    }\n    \n    // helpers\n    setFocusInput(id, index) {\n        let ct    = this.container.current;\n        let input,res;\n        \n        input = ct.querySelector(`input[id=\"${id}\"]`)\n        \n        if(!input){\n            // console.warn(id);\n            res = ct.querySelectorAll(`input`);\n            input = res[index];\n            \n        }\n    \n        if(!input){\n            // console.warn(id,input,res)\n        }\n        \n        input.focus();\n        // console.log('[setFocusInput]', id, input.value);\n    }\n    \n    showStatus() {\n        // console.info(`[Status]`, this.state);\n    }\n    \n    moveDown (idx, arr) {\n        \n        if(arr.length <=1) return;\n        \n        let update =[];\n        \n        idx = parseInt(idx);\n        \n        let id  = `input-${arr[idx].id}`;\n        \n        \n        \n        let isLast = (idx === arr.length-1)\n        \n        if(isLast){\n            this.setFocusInput(id);\n            return;\n        }\n        else if(arr.length===2){\n            update =[arr[1],arr[0]]\n        }\n        else if (idx ===arr.length - 1){\n            update = [...arr.slice(0, idx), arr[idx + 1], arr[idx]];\n        }\n        else if (idx < arr.length - 1) {\n            update = [...arr.slice(0, idx), arr[idx + 1], arr[idx], ...arr.slice(idx + 2)];\n            \n        } else {\n            return;\n        }\n        \n        this.setState({\n            inputs: update\n        },() => {\n            \n            let localId = id;\n            \n            // console.info(`setted, focus input idx=${idx} id=${id}`,localId)\n            \n            \n            this.setFocusInput(localId)\n        })\n    }\n    moveUp   (idx, arr) {\n        if(arr.length <=1) return;\n        \n        let update,id;\n        \n        idx = parseInt(idx);\n        id  = `input-${arr[idx].id}`;\n        \n        if(idx===0) {\n            // console.warn(idx);\n            this.setFocusInput(id);\n            return false;\n        }\n        else if((idx>0) && (arr.length===2)){\n            update =[arr[1],arr[0]]\n        }\n        else if (idx === 1) {\n            update = [arr[1], arr[0], ...arr.slice(2)];\n        }\n        else  {\n            let to     = idx-1;\n            update = [...arr.slice(0, to), arr[idx], arr[idx-1], ...arr.slice(idx + 1)];\n            \n        }\n        \n        // console.log(`moving UP idx=${idx}`,update)\n        \n        this.setState({\n            inputs: update\n        },() => {\n            \n            // console.info('focus input id=',id)\n            \n            let localId = id;\n            this.setFocusInput(localId)\n        })\n    }\n    moveInput(action, id, index, up = false) {\n        \n    \n        // let arr = this.state.inputs;\n        let arr = this.getUpdatedInputValues(action, index);\n    \n        // let target = this.getTargetInputIndex(arr,id);\n        let target = this.getTargetInputIndex(arr,id);\n    \n        // console.log(`moving a=${action} index:${index} target=${target} arr`,arr)\n        \n        id = parseInt(id);\n        \n        switch (action) {\n            case \"row-up\":\n                this.moveUp(target,arr);\n                break;\n                \n            case \"row-down\":\n                this.moveDown(target, arr);\n                break;\n            default:\n                return;\n        }\n    }\n    \n    deleteInput(index) {\n        \n        let update = []\n        let arr    = this.getUpdatedInputValues();\n        let target = this.getTargetInputIndex(arr,index);\n        \n        \n        if(arr.length ===1){\n            update = []\n        }\n        else if(arr.length ===2){\n            update = (target===0)?[arr[1]]:[arr[0]]\n        }\n        else if(target===1){\n            update= [arr[0],...arr.slice(2)]\n        }\n        else if(target===arr.length-1){\n            update= [...arr.slice(0,-1)]\n        }\n        else {\n            update= [arr.slice(0,target-1),...arr.slice(target+1)]\n        }\n        \n        // console.log(`deleteInput index=${index} target=${target} `,update,arr)\n        \n        this.setState({\n            inputs: update\n        })\n    }\n    \n    getUpdatedInputValues() {\n        \n        let arr = this.state.inputs;\n        let ct  = this.container.current;\n        \n        let newValues = [];\n    \n        let inputArr = ct.querySelectorAll('input');\n    \n        // console.log('update values',inputArr)\n        \n        inputArr.forEach( (inp,i) => {\n            \n            newValues.push({id:inp.dataset.id,value:inp.value})\n        })\n        \n        return newValues;\n        \n    }\n    \n    // life cycle functions\n    \n    componentDidUpdate(prevProps, prevState, snapshot) {\n        let idx\n        let arr = this.state.inputs;\n        \n        if (arr.length === 0) {\n            return false;\n        }\n        else if (prevState.inputs.length!==arr.length) {\n            idx = arr.length - 1;\n            this.setFocusInput(this.getFocusId(idx),idx);\n            \n        }\n    \n        return true;\n    }\n    \n    // handlers.\n    \n    handleOnChange(e) {\n        let input = e.currentTarget;\n        let id    = input.dataset.id;\n    }\n    \n    handleOnBlur(e) {\n        // // console.log(e.target.value)\n        let input = e.currentTarget;\n        let id    = input.dataset.id;\n    \n        if (e.currentTarget === e.target) {\n            // console.log('unfocused self');\n        } else {\n            // console.log('unfocused child', e.target);\n        }\n        if (!e.currentTarget.contains(e.relatedTarget)) {\n            // Not triggered when swapping focus between children\n            // console.log('focus left self');\n        }\n        \n        // this.setInputValue(id, input.value);\n    }\n    \n    handleAddOnClick(e) {\n        e.preventDefault();\n        this.addInputField();\n    }\n    \n    handleActionClick(e) {\n        \n        e.preventDefault();\n        \n        let button = e.target;\n        let cls    = button.className;\n        let id     = e.currentTarget.dataset.id;\n        let index  = e.currentTarget.dataset.index;\n        \n        \n        if(cls === 'row-delete'){\n            this.deleteInput(index);\n            return;\n        }\n        else if (!['row-up', 'row-down'].includes(cls)) {\n            return false;\n        }\n        \n        let moveUp = (cls === 'row-up');\n        \n        if(this.state.inputs.length <=1) return false;\n        \n        this.moveInput(cls, id, index, moveUp);\n        \n    }\n    \n    \n    // Render Componet\n    render() {\n        \n        const AddRowButton = (props, children) => {\n            return (<button className=\"add-row\" {...props}>➕</button>)\n        }\n        \n        return (\n            <>\n                <h1>Dynamic Inputs</h1>\n                <p>Add, Remove and Sort inputs.</p>\n                \n                <AddRowButton onClick={this.handleAddOnClick}/>\n                \n                <div ref={this.container}>\n                    \n                    {this.state.inputs.map((item, i) => {\n                        \n                        // console.log(`[Input List Render] i=`, i, item.id,item.value)\n                        \n                        if(!item || (item.id===undefined)) throw new Error(item);\n                        \n                        return (<InputField id={`input-ct-${i}`}\n                                            index={i}\n                                            key={`${item.id}`}\n                                            idx={`${i}`}\n                                            value={item.value}\n                                            onClick={this.handleActionClick}\n                                            onBlur={this.handleOnBlur}/>)\n                    })}\n                    \n                </div>\n            </>\n        );\n    }\n}\n\nexport class InputField extends React.Component {\n    \n \n    \n    \n    constructor(props) {\n        \n        super(props);\n        \n        this.state = {\n            idx  : props.idx,\n            index: props.index,\n            value: props.value,\n            \n            onBlur: props.onBlur,\n            onClick: props.onClick,\n        }\n        \n        this.handleOnChange = this.handleOnChange.bind(this)\n        \n        \n    }\n    \n    handleOnChange(e) {\n        e.preventDefault();\n        this.setState({value: e.target.value})\n    }\n    \n    render() {\n    \n        // // console.warn('[input render]',this.state    )\n        \n        let inputConfig = {\n            id       : `input-${this.state.idx}`,\n            \"data-id\": this.state.idx,\n            \"data-index\": this.state.index,\n            className: \"row-input\",\n            value    : this.state.value,\n            onChange : this.handleOnChange,\n            onBlur   : this.state.onBlur\n            \n        }\n        \n        let divCtConfig = {\n            className: 'row',\n            'data-id': this.state.idx,\n            \"data-index\": this.state.index,\n            id       : `input-ct-${this.state.idx}`,\n            onClick  : this.state.onClick\n        }\n        \n        return (<div {...divCtConfig}>\n            {/*<span style={{paddingRight: '5px'}}>{this.state.idx}</span>*/}\n            <input {...inputConfig} />\n            <div className=\"controls\">\n                <button className=\"row-up\">⬆</button>\n                <button className=\"row-down\">⬇</button>\n                <button className=\"row-delete\">❌</button>\n            </div>\n        </div>)\n    }\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport DynamicInput from \"./DynamicInput/DynamicInput\";\n\nimport \"./DynamicInput/style.scss\";\n/* Changes made to this file will not affect your tests.\n * This file is used to control the behavior of the web preview. \n*/\n\nconst books = [\n  {\n    \"author\": \"Chinua Achebe\",\n    \"country\": \"Nigeria\",\n    \"language\": \"English\",\n    \"pages\": 209,\n    \"title\": \"Things Fall Apart\",\n    \"year\": 1958\n  },\n  {\n    \"author\": \"Dante Alighieri\",\n    \"country\": \"Italy\",\n    \"language\": \"Italian\",\n    \"pages\": 928,\n    \"title\": \"The Divine Comedy\",\n    \"year\": 1315\n  },\n  {\n    \"author\": \"Virginia Woolf\",\n    \"country\": \"United Kingdom\",\n    \"language\": \"English\",\n    \"pages\": 216,\n    \"title\": \"Mrs Dalloway\",\n    \"year\": 1925\n  },\n  {\n    \"author\": \"Virginia Woolf\",\n    \"country\": \"United Kingdom\",\n    \"language\": \"English\",\n    \"pages\": 209,\n    \"title\": \"To the Lighthouse\",\n    \"year\": 1927\n  },\n];\n\nexport const DynamicListApp = props => {\n  return (\n    <div id=\"app2\">\n      <DynamicInput books={books} />\n    </div>\n  );\n}\n\nexport default DynamicListApp;","import React from \"react\";\n\nclass BookSearch extends React.Component {\n    constructor(props) {\n        super(props);\n        const fields = [\n            \"author\", \"title\", \"country\", \"language\", \"year\"\n        ];\n        this.state   = {\n            fields: fields.reduce((a, e) => {\n                a[e] = \"\";\n                return a;\n            }, {})\n        };\n        \n        // moving to binded handler.\n        this.handleChange = this.handleChange.bind(this);\n    }\n    \n    /**\n     * Test if the search fields values matches the with book entries (field to field)\n     * @param book\n     * @return {this is [string, unknown][]}\n     *\n     * @internal Fixed match method, changing from some to EVERY\n     */\n    matchesBook(book) {\n        const {fields} = this.state;\n        let res        = Object.entries(book).every(([k, v]) => {\n            return !fields[k] || v.toString()\n                                    .toLowerCase()\n                                    .includes(fields[k].trim().toLowerCase());\n        })\n        return res;\n    }\n    \n    /**\n     * fix: use standart event with dataset property.\n     * fix: use currentTarget to get input value.\n     * @param {SyntheticEvent} evt\n     */\n    handleChange(evt) {\n        \n        let name  = evt.currentTarget.dataset.field;\n        let value = evt.target.value;\n        \n        this.setState(state => ({\n            ...state,\n            fields: {\n                ...state.fields,\n                [name]: value\n            }\n        }));\n    }\n    \n    /**\n     * Added binded onChange handler and dataset property\n     * @return {JSX.Element}\n     */\n    render() {\n        \n        return (\n            \n            <div className=\"book-search-container\">\n                \n                <div className=\"search-box\">\n                    \n                    {Object.keys(this.state.fields).map(e =>\n                        <label key={e}>\n                            {e}\n                            <input\n                                autoComplete=\"off\"\n                                value={this.state.fields[e]}\n                                className={e}\n                                onChange={this.handleChange}\n                                data-field={e}\n                            />\n                        </label>\n                    )}\n                </div>\n                \n                <div className=\"books\">\n                    {this.props.books\n                        .filter(e => this.matchesBook(e))\n                        .map((e, i) => {\n                            return (<div key={e.title + i} className=\"book\">\n                                {Object.entries(e).map(([k, v]) =>\n                                    <div key={k} className=\"book-detail-row\">\n                                        <span className=\"book-detail-key\">{k}</span>\n                                        <span className=\"book-detail-val\">{v}</span>\n                                    </div>\n                                )}\n                            </div>)\n                        })\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default BookSearch;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport BookSearch from \"./BookSearch/BookSearch\";\n\nimport \"./styles.scss\";\n/* Changes made to this file will not affect your tests.\n * This file is used to control the behavior of the web preview. \n*/\n\nconst books = [\n  {\n    \"author\": \"Chinua Achebe\",\n    \"country\": \"Nigeria\",\n    \"language\": \"English\",\n    \"pages\": 209,\n    \"title\": \"Things Fall Apart\",\n    \"year\": 1958\n  },\n  {\n    \"author\": \"Dante Alighieri\",\n    \"country\": \"Italy\",\n    \"language\": \"Italian\",\n    \"pages\": 928,\n    \"title\": \"The Divine Comedy\",\n    \"year\": 1315\n  },\n  {\n    \"author\": \"Virginia Woolf\",\n    \"country\": \"United Kingdom\",\n    \"language\": \"English\",\n    \"pages\": 216,\n    \"title\": \"Mrs Dalloway\",\n    \"year\": 1925\n  },\n  {\n    \"author\": \"Virginia Woolf\",\n    \"country\": \"United Kingdom\",\n    \"language\": \"English\",\n    \"pages\": 209,\n    \"title\": \"To the Lighthouse\",\n    \"year\": 1927\n  },\n];\n\nexport const SearchBarApp = props => {\n  return (\n    <div id=\"app3\">\n      <BookSearch books={books} />\n    </div>\n  );\n}\n\nexport default SearchBarApp;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport CalculatorApp from \"./App1/App\";\nimport DynamicListApp from \"./App2/App2\";\nimport SearchBarApp from \"./App3/App\";\n\n/* Changes made to this file will not affect your tests.\n * This file is used to control the behavior of the web preview. \n*/\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\nimport Calculator from \"./App1/Calculator\";\n\n\n\nexport default function App() {\n    return (\n        <Router>\n            <div>\n                <nav>\n                    <ul>\n                        <li>\n                            <Link to=\"/\">Home</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/calc\">Calculator</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/inputs\">Dynamic Inputs</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/search\">Search</Link>\n                        </li>\n                    </ul>\n                </nav>\n                \n                {/* A <Switch> looks through its children <Route>s and\n                 renders the first one that matches the current URL. */}\n                <Switch>\n                    <Route exact path=\"/\" component={Home} />\n                    <Route path=\"/calc\">\n                        <CalculatorApp />\n                    </Route>\n                    <Route path=\"/inputs\">\n                        <DynamicListApp />\n                    </Route>\n                    <Route path=\"/search\">\n                        <SearchBarApp />\n                    </Route>\n                </Switch>\n            </div>\n        </Router>\n    );\n}\n\nfunction Home() {\n    return <h2>Home</h2>;\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}